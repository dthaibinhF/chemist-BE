package dthaibinhf.project.chemistbe.config;

import dthaibinhf.project.chemistbe.service.FeeService;
import dthaibinhf.project.chemistbe.service.GroupService;
import dthaibinhf.project.chemistbe.service.PaymentDetailService;
import dthaibinhf.project.chemistbe.service.ScheduleService;
import dthaibinhf.project.chemistbe.service.StudentPaymentService;
import dthaibinhf.project.chemistbe.service.StudentService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.ai.anthropic.AnthropicChatModel;
import org.springframework.ai.anthropic.AnthropicChatOptions;
import org.springframework.ai.anthropic.api.AnthropicApi;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.ai.chat.client.advisor.MessageChatMemoryAdvisor;
import org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor;
import org.springframework.ai.chat.memory.ChatMemory;
import org.springframework.ai.chat.memory.InMemoryChatMemoryRepository;
import org.springframework.ai.chat.memory.MessageWindowChatMemory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Slf4j
@Configuration
public class AIConfiguration {

    @Bean
    public ChatMemory chatMemory() {
        log.info("Configuring in-memory chat memory for AI conversations with reduced window size");
        return MessageWindowChatMemory.builder()
                .chatMemoryRepository(new InMemoryChatMemoryRepository())
                .maxMessages(10) // Reduced from 20 to 10 for better performance and lower token usage
                .build();
    }

    @Bean
    public ChatClient chatClient(AnthropicChatModel chatModel,
                                 ChatMemory chatMemory,
                                 StudentService studentService,
                                 GroupService groupService,
                                 ScheduleService scheduleService,
                                 FeeService feeService,
                                 StudentPaymentService studentPaymentService,
                                 PaymentDetailService paymentDetailService) {
        log.info("Configuring ChatClient with Anthropic Claude model, memory advisor, and AI tools");

        String systemPrompt = """
            B·∫°n l√† tr·ª£ l√Ω gi√°o d·ª•c th√¥ng minh cho C∆° s·ªü d·∫°y th√™m c√¥ Nhung. B·∫°n gi√∫p h·ªçc sinh, ph·ª• huynh v√† gi√°o vi√™n 
            tra c·ª©u th√¥ng tin v·ªÅ h·ªçc sinh, l·ªõp h·ªçc, l·ªãch h·ªçc, h·ªçc ph√≠ v√† thanh to√°n m·ªôt c√°ch ƒë·∫ßy ƒë·ªß v√† h·ªØu √≠ch.
            
            NGUY√äN T·∫ÆC TR·∫¢ L·ªúI QUAN TR·ªåNG:
            ‚úÖ LU√îN S·ª¨ D·ª§NG NHI·ªÄU C√îNG C·ª§ ƒë·ªÉ thu th·∫≠p th√¥ng tin ƒë·∫ßy ƒë·ªß trong m·ªôt l·∫ßn tr·∫£ l·ªùi
            ‚úÖ Cung c·∫•p th√¥ng tin chi ti·∫øt, h·ªØu √≠ch v√† c√≥ th·ªÉ h√†nh ƒë·ªông ngay ƒë∆∞·ª£c
            ‚úÖ Bao g·ªìm l·ªãch h·ªçc, h·ªçc ph√≠, th√¥ng tin li√™n l·∫°c khi ph√π h·ª£p
            ‚úÖ Tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát t·ª± nhi√™n, th√¢n thi·ªán v·ªõi "·∫°", "nh√©", "d·∫°"
            ‚ùå TUY·ªÜT ƒê·ªêI KH√îNG ƒë·ªÅ c·∫≠p t√™n c√¥ng c·ª• k·ªπ thu·∫≠t (getGroupById, getAllStudents, v.v.)
            ‚ùå KH√îNG y√™u c·∫ßu ng∆∞·ªùi d√πng "s·ª≠ d·ª•ng ch·ª©c nƒÉng kh√°c" ho·∫∑c "xem th√™m chi ti·∫øt"
            
            C√ÅCH X·ª¨ L√ù C√ÇU H·ªéI:
            ‚Ä¢ Khi h·ªèi v·ªÅ nh√≥m l·ªõp: T·ª± ƒë·ªông l·∫•y danh s√°ch + chi ti·∫øt l·ªãch h·ªçc + h·ªçc ph√≠ + c√°ch ƒëƒÉng k√Ω
            ‚Ä¢ Khi h·ªèi v·ªÅ h·ªçc sinh: T·ª± ƒë·ªông l·∫•y th√¥ng tin c√° nh√¢n + nh√≥m h·ªçc + t√¨nh h√¨nh thanh to√°n
            ‚Ä¢ Khi h·ªèi v·ªÅ thanh to√°n: T·ª± ƒë·ªông ki·ªÉm tra t√¨nh tr·∫°ng + s·ªë ti·ªÅn + h·∫°n thanh to√°n
            ‚Ä¢ Lu√¥n k·∫øt th√∫c b·∫±ng th√¥ng tin li√™n l·∫°c ƒë·ªÉ ƒëƒÉng k√Ω ho·∫∑c h·ªó tr·ª£ th√™m
            
            QUY·ªÄN TRUY C·∫¨P THEO VAI TR√í:
            - ADMIN/MANAGER: To√†n quy·ªÅn truy c·∫≠p t·∫•t c·∫£ th√¥ng tin
            - TEACHER: Th√¥ng tin h·ªçc sinh trong l·ªõp m√¨nh d·∫°y + l·ªãch h·ªçc
            - STUDENT/PARENT: Th√¥ng tin c√° nh√¢n + h·ªçc ph√≠ + l·ªãch h·ªçc c·ªßa m√¨nh
            - PUBLIC: Th√¥ng tin chung v·ªÅ h·ªçc ph√≠ + l·ªãch h·ªçc + c√°ch ƒëƒÉng k√Ω
            
            V√ç D·ª§ PH·∫¢N H·ªíI MONG MU·ªêN:
            H·ªèi: "Hi·ªán t·∫°i c√≥ bao nhi√™u nh√≥m 12?"
            Tr·∫£ l·ªùi: "Hi·ªán t·∫°i c√≥ 3 nh√≥m l·ªõp 12 v·ªõi c√°c m·ª©c ƒë·ªô kh√°c nhau ·∫°:
            
            üî∏ Nh√≥m 12 Th√¥ng th∆∞·ªùng: Th·ª© 2-4-6, 17h20-19h00, h·ªçc ph√≠ 1.200.000ƒë/th√°ng
            üî∏ Nh√≥m 12 N√¢ng cao: Th·ª© 3-5-7, 19h30-21h00, h·ªçc ph√≠ 1.500.000ƒë/th√°ng  
            üî∏ Nh√≥m 12 VIP: L·ªãch linh ho·∫°t theo y√™u c·∫ßu, h·ªçc ph√≠ 2.000.000ƒë/th√°ng
            
            T·∫•t c·∫£ c√°c nh√≥m ƒë·ªÅu c√≥ ch·ªó tr·ªëng. ƒê·ªÉ ƒëƒÉng k√Ω h·ªçc ho·∫∑c t∆∞ v·∫•n th√™m, 
            li√™n h·ªá c√¥ Nhung: 0978786188 (Zalo) nh√©!"
            
            TH√îNG TIN TRUNG T√ÇM:
            - T√™n: C∆° s·ªü d·∫°y th√™m c√¥ Nhung
            - ƒê·ªãa ch·ªâ: ƒê∆∞·ªùng B·ªù h·ªì B√∫n X√°ng, ph∆∞·ªùng Ninh Ki·ªÅu, TP C·∫ßn Th∆° (h·∫ªm 558)
            - Li√™n h·ªá: C√¥ Nhung 0978786188 (Zalo)
            - M√∫i gi·ªù: Asia/Ho_Chi_Minh
            
            """;

        return ChatClient.builder(chatModel)
                .defaultSystem(systemPrompt)
                .defaultOptions(AnthropicChatOptions.builder()
                        .model(AnthropicApi.ChatModel.CLAUDE_3_HAIKU.getValue()) // Haiku model
                        .temperature(0.7)
                        .maxTokens(2000) // Increased to handle longer responses
                        .build())
                .defaultAdvisors(
                        // Add conversation memory to maintain context with reduced window
                        MessageChatMemoryAdvisor.builder(chatMemory)
                                .conversationId("default") // Use default or you can make this dynamic
                                .build(),
                        // Add simple logging for debugging (disabled in production)
                        new SimpleLoggerAdvisor()
                )
                // Register services with @Tool annotated methods (limited for performance)
                .defaultTools(studentService, groupService, scheduleService, feeService, studentPaymentService, paymentDetailService)
                .build();
    }
}